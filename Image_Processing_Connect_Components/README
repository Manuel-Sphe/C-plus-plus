Image processing with connected components

In the area of image processing, we often threshold the intensity of pixels in a greyscale
image to produce a new “binary” image which has foreground (intensity=255) pixels
corresponding to the object(s) of interest (inputs >= threshold value), and background
pixels (intensity=0), corresponding to image parts which are not of interest (lower than
threshold value input). This serves as the first stage to more complex processing to allow
more accurate detection of objects, and allows us to reason about object sizes and to reject
erroneous object detections in an image (or video)

Given a greyscale input image (PGM) and asked to provide
an image processing class that can extract all the connected components for the image,
given some user-supplied threshold. A connected component is a collection of image pixels
which ‘touch’ each other. There are two categories of connectedness — but here we are
concerned only with 4-connected pixels. These are foreground pixels which are connected
to each other if they have a foreground neighbour to the N, E, S or W (any of these
cases means they are connected)


README FOR COMPILATION, CLEANING FILES AND RUNNING OF THE APPLICATION

COMPILATION use command: $make default              #To compile for Driver file
			 $make test                 #To compile for unit test file

RUNNING use command:
option1 - Test core work with Driver:
./findcomp image_name -s minimumSize maximumSize -t Threshold -w outputfilename -w process outputfilename  # for E.G ./findcomp  test1.pgm -s 1 2000000 -t 215 -p -w ZA
                                                                           

option2 - Test mastery with Driver :
./findcomp image_name -s minimumSize maximumSize -t Threshold -w outputfilename -w process outputfilename -o # For E.G ./findcomp  test1.pgm -s 1 2000000 -t 215 -p -w ZA
                                                                                # Here -o means we must use set of container instead of vector 
For unit Test:
   use command $make run or $./findcomp  
                                                                             
 outputfilename:
 I used three images for testing which chess.pgm , test.pgm and test1.pgm. They are in directory testImage. to run code they need to be copied to directory Assignment_3.
 All the ouputfile name for input chess.pgm  will be named as chess-minSize-maxSize.pgm
 All the ouputfile name for input test.pgm  will be named as test-minSize-maxSize.pgm
 All the ouputfile name for input test1.pgm  will be named as test1-minSize-maxSize.pgm
 

CLEANING use command: $make clean  # all *.pgm, *.png,  *.o ,findcomp will be removed     


//NB please befor running make sure to copy test image from directory testImages to directory Assigment_3                                                                                               
                                                                                                                                                                           
